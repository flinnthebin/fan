#!/usr/bin/env sh

#####################
#                   #
#      CONFIG       #
#                   #
#####################

PID="/tmp/fanmgr.pid"
TEMP_HISTORY="/tmp/temp_history"
SAMPLE_INTERVAL=2   # Temp check interval (s)
SAMPLES=5           # No. samples for mean avg 

#####################
#                   #
#      CONFIG       #
#                   #
#####################

fan_mode() {
    sudo fan $1 > /dev/null 2>&1
}

start_fanmgr() {
    if [ -f "$PID" ]; then
        echo "fanmgr already active [PID: $(cat $PID)]"
        exit 1
    fi

    "$0" --background &
    pid=$!
    echo $pid > "$PID"
    echo "fanmgr active [PID: $pid]"
    exit 0
}

kill_fanmgr() {
    if [ ! -f "$PID" ]; then
        echo "fanmgr inactive."
        exit 1
    fi

    pid=$(cat "$PID")
    kill "$pid" && rm -f "$PID" "$TEMP_HISTORY"
    echo "fanmgr inactive."
    exit 0
}

get_cpu_temp() {
    fanctl_output=$(fanctl)  # Run fanctl to get the status
    echo "$fanctl_output" | grep "CPU Temperature" | awk '{print $NF}'  # Extract temperature value
}

average_temp() {
    total=0
    count=0
    while read -r t; do
        total=$((total + t))
        count=$((count + 1))
    done < "$TEMP_HISTORY"

    [ $count -gt 0 ] && echo $((total / count)) || echo 0
}


monitor_temp() {
    current_mode="0 0" # state mgmt 

    while true; do
        temp=$(get_cpu_temp)
        echo "$temp" >> "$TEMP_HISTORY"

        # Ensure only the latest N samples are kept
        [ $(wc -l < "$TEMP_HISTORY") -gt $SAMPLES ] && sed -i '1d' "$TEMP_HISTORY"

        avg_temp=$(average_temp)
        #echo "Average temperature: $avg_tempÂ°C, Current fan mode: $current_mode"  # Debug

        if [ "$avg_temp" -lt 50 ]; then
            # off
            if [ "$current_mode" != "0 0" ]; then
                fan_mode "0 0"
                current_mode="0 0"
            fi
        elif [ "$avg_temp" -ge 50 ] && [ "$avg_temp" -lt 60 ]; then
            # left fan 2400 RPM, right fan off (only accessible from 0 0)
            if [ "$current_mode" != "1 -1" ]; then
                if [ "$current_mode" != "0 0" ]; then
                    fan_mode "0 0"
                    current_mode="0 0"
                    sleep 1  # transition delay
                fi
                fan_mode "1 -1"
                current_mode="1 -1"
            fi
        elif [ "$avg_temp" -ge 60 ] && [ "$avg_temp" -lt 70 ]; then
            # Right fan 5100 RPM, left fan off
            if [ "$current_mode" != "0 1" ]; then
                fan_mode "0 1"
                current_mode="0 1"
            fi
        elif [ "$avg_temp" -ge 70 ] && [ "$avg_temp" -lt 80 ]; then
            # Left 2400 RPM, right 5100 RPM
            if [ "$current_mode" != "1 1" ]; then
                fan_mode "1 1"
                current_mode="1 1"
            fi
        else
            # Left 6300 RPM, right 5800 RPM (max)
            if [ "$current_mode" != "2 2" ]; then
                fan_mode "2 2"
                current_mode="2 2"
            fi
        fi

        sleep "$SAMPLE_INTERVAL"
    done
}

# Parse args
if [ "$1" = "-k" ]; then
    kill_fanmgr
elif [ "$1" != "--background" ]; then
    start_fanmgr
fi

# Main
monitor_temp

