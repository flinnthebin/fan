#!/usr/bin/env sh

#####################
#      CONFIG       #
#####################

LOW=50     # Below this, fans are off (0 0)
MEDIUM=60  # Between LOW-MEDIUM, left fan 2400 RPM, right fan off (1 -1)
HIGH=70    # Between MEDIUM-HIGH, right fan 5100 RPM, left fan off (0 1)
MAX=80     # Between HIGH-MAX, both fans on (1 1)
OVER_MAX=80  # Above OVER_MAX, max speed (2 2)

PID="/tmp/fanmgr.pid"
TEMP_HISTORY="/tmp/temp_history"
SAMPLE_INTERVAL=1   # Temp check interval (seconds)
SAMPLES=5           # Number of samples for mean average

#####################
#      HELPERS      #
#####################

fan_mode() {
    sudo fan $1 > /dev/null 2>&1
}

start_fanmgr() {
    if [ -f "$PID" ]; then
        echo "fanmgr already active [PID: $(cat $PID)]"
        exit 1
    fi

    "$0" --background &
    pid=$!
    echo $pid > "$PID"
    echo "fanmgr active [PID: $pid]"
    exit 0
}

kill_fanmgr() {
    if [ ! -f "$PID" ]; then
        echo "fanmgr inactive."
        exit 1
    fi

    pid=$(cat "$PID")
    kill "$pid" && rm -f "$PID" "$TEMP_HISTORY"
    echo "fanmgr inactive."
    exit 0
}

get_cpu_temp() {
    fanctl_output=$(fanctl)
    echo "$fanctl_output" | grep "CPU Temperature" | awk '{print $NF}'  #
}

average_temp() {
    total=0
    count=0
    while read -r t; do
        total=$((total + t))
        count=$((count + 1))
    done < "$TEMP_HISTORY"

    [ $count -gt 0 ] && echo $((total / count)) || echo 0
}

monitor_temp() {
    current_mode="0 0" # state tracking

    while true; do
        temp=$(get_cpu_temp)
        echo "$temp" >> "$TEMP_HISTORY"

        [ $(wc -l < "$TEMP_HISTORY") -gt $SAMPLES ] && sed -i '1d' "$TEMP_HISTORY"
        avg_temp=$(average_temp)

        if [ "$avg_temp" -lt "$LOW" ]; then
            if [ "$current_mode" != "0 0" ]; then
                fan_mode "0 0"
                current_mode="0 0"
            fi

        elif [ "$avg_temp" -ge "$LOW" ] && [ "$avg_temp" -lt "$MEDIUM" ]; then
            if [ "$current_mode" != "1 -1" ]; then
                if [ "$current_mode" != "0 0" ]; then
                    fan_mode "0 0"  # 1 -1 only works if prev state was 0 0
                    current_mode="0 0"
                    sleep 1
                fi
                fan_mode "1 -1"
                current_mode="1 -1"
            fi

        elif [ "$avg_temp" -ge "$MEDIUM" ] && [ "$avg_temp" -lt "$HIGH" ]; then
            if [ "$current_mode" != "0 1" ]; then
                fan_mode "0 1"
                current_mode="0 1"
            fi

        elif [ "$avg_temp" -ge "$HIGH" ] && [ "$avg_temp" -lt "$MAX" ]; then
            if [ "$current_mode" != "1 1" ]; then
                fan_mode "1 1"
                current_mode="1 1"
            fi

        else
            if [ "$current_mode" != "2 2" ]; then
                fan_mode "2 2"
                current_mode="2 2"
            fi
        fi

        sleep "$SAMPLE_INTERVAL"
    done
}

#####################
#       MAIN        #
#####################

if [ "$1" = "-k" ]; then
    kill_fanmgr
elif [ "$1" != "--background" ]; then
    start_fanmgr
fi

monitor_temp
